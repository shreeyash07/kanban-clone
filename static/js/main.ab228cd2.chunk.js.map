{"version":3,"sources":["component/TicketForm.jsx","component/TicketModal.jsx","component/Ticket.jsx","component/Column.jsx","component/Board.jsx","App.js","index.js"],"names":["TicketForm","closeModal","handleSubmit","title","isEdit","formik","useFormik","initialValues","onSubmit","values","className","type","placeholder","id","value","onChange","handleChange","TicketModal","modalIsOpen","isOpen","onRequestClose","ariaHideApp","Ticket","item","index","setElements","useState","setIsOpen","editTask","prevState","data","prefix","findIndex","val","localStorage","setItem","JSON","stringify","deleteTask","splice","openModal","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","onClick","content","Column","elements","droppableId","droppableProps","map","lists","Board","reduce","acc","listKey","useEffect","getItem","parse","onDragEnd","result","destination","listCopy","list","Array","from","removeFromList","source","removedElement","newSourceList","destinationList","element","nextElementId","addToList","task","randomId","Math","floor","random","Backlog","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab228cd2.chunk.js","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\n\nconst TicketForm = ({ closeModal, handleSubmit, title, isEdit }) => {\n\n\n    const formik = useFormik({\n        initialValues: {\n\n            title: (title) ? title : \"\",\n        },\n        onSubmit: (values) => {\n            handleSubmit(values);\n            closeModal();\n        },\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"title-wrap mb-3 row\">\n                <h4 className=\"col-11\">{isEdit? 'Edit Ticket': \"Add Ticket\"}</h4>\n            </div>\n            <form onSubmit={formik.handleSubmit}>\n                <div className=\"input-wrap\">\n                    <div className=\"mb-3 row\">\n                        <h4>Title</h4>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"Ticket Title\"\n                            id=\"title\"\n                            value={formik.values.title}\n                            onChange={formik.handleChange}\n                        />\n                    </div>\n\n                    <div className=\"mb-3 row\">\n                        <button className=\"button button-30\" type=\"submit\">\n                        {isEdit? 'Update': \"Add\"}\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default TicketForm;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport TicketForm from \"./TicketForm\";\n\nconst TicketModal = ({ modalIsOpen, closeModal, handleSubmit, title, isEdit }) => {\n\n    return (\n        <Modal\n            isOpen={modalIsOpen}\n            onRequestClose={closeModal}\n            className=\"modal-ticket\"\n            ariaHideApp={false}\n        >\n            <TicketForm closeModal={closeModal} handleSubmit={handleSubmit} title={title} isEdit = {isEdit}/>\n        </Modal>\n    );\n};\n\nexport default TicketModal;","import { Draggable } from \"react-beautiful-dnd\";\nimport React, { useState } from \"react\";\nimport TicketModal from \"./TicketModal\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst Ticket = ({ item, index, setElements }) => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const editTask = (values) => {\n    setElements((prevState) => {\n      const data = { ...prevState };\n      const index = prevState[item.prefix].findIndex(\n        (val) => val.id === item.id\n      );\n      data[item.prefix][index].title = values.title;\n      localStorage.setItem(\"taskAdded\", JSON.stringify(data));\n      return data;\n    });\n  };\n\n  const deleteTask = () => {\n    setElements((prevState) => {\n      const data = { ...prevState };\n      const index = prevState[item.prefix].findIndex(\n        (val) => val.id === item.id\n      );\n      data[item.prefix].splice(index, 1);\n      localStorage.setItem(\"taskAdded\", JSON.stringify(data));\n      return data;\n    });\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  return (\n    <Draggable draggableId={item.id} index={index}>\n      {(provided, snapshot) => {\n        return (\n          <div\n            className=\"ticketDrag\"\n            ref={provided.innerRef}\n            snapshot={snapshot}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <div className=\"row\">\n              <h3 className=\"col-6\">{item.title}</h3>\n              <div className=\"col-3\">\n                <EditIcon onClick={openModal} />\n              </div>\n              <div className=\"col-3\">\n                <DeleteIcon onClick={deleteTask} />\n              </div>\n            </div>\n\n            <div className=\"ticketFooter\">\n              <span>{item.content}</span>\n            </div>\n\n            <TicketModal\n              modalIsOpen={modalIsOpen}\n              closeModal={closeModal}\n              handleSubmit={editTask}\n              title={item.title}\n              isEdit={true}\n            />\n          </div>\n        );\n      }}\n    </Draggable>\n  );\n};\n\nexport default Ticket;\n","import { Droppable } from \"react-beautiful-dnd\";\nimport Ticket from \"./Ticket\";\nimport React from \"react\";\n\nconst Column = ({ prefix, elements, setElements }) => (\n    <div className=\"column-wrap\">\n        <div className=\"column-title\">{prefix}</div>\n        <Droppable droppableId={`${prefix}`}>\n            {(provided) => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                    {elements.map((item, index) => (\n                        <Ticket key={item.id} item={item} index={index} setElements={setElements} />\n                    ))}\n                    {provided.placeholder}\n                </div>\n            )}\n        </Droppable>\n    </div>\n);\n\nexport default Column;\n","import React, { useEffect, useState } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Column from \"./Column\";\nimport TicketModal from \"./TicketModal\";\n\nconst lists = [\"Backlog\", \"todo\", \"inProgress\", \"done\"];\n\n\nconst generateLists = () =>\n    lists.reduce((acc, listKey) => ({ ...acc, [listKey]: [] }),\n        {}\n    );\n\nconst removeFromList = (list, index) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(index, 1);\n    return [removed, result];\n};\n\nconst addToList = (list, index, element, nextElementId) => {\n    const result = Array.from(list);\n    result.splice(index, 0, element);\n    result[0].prefix = nextElementId;\n    return result;\n};\n\n\nconst Board = () => {\n    const [elements, setElements] = useState(generateLists());\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n\n    const addTask = (task) => {\n\n        const randomId = Math.floor(Math.random() * 1000);\n\n        setElements((prevState) => {\n            const data = {\n                ...prevState, Backlog: [\n                    ...prevState.Backlog,\n                    {\n                        id: `item-${randomId}`,\n                        prefix: lists[0],\n                        content: `Ticket id:  ${randomId}`,\n                        title: task.title\n                    }\n                ]\n            }\n            localStorage.setItem(\"taskAdded\", JSON.stringify(data));\n            return data;\n        });\n    }\n\n    const closeModal = () => {\n        setIsOpen(false);\n    };\n\n    const openModal = () => {\n        setIsOpen(true);\n    };\n\n    useEffect(\n        () => {\n            if (localStorage.getItem(\"taskAdded\") !== null) {\n                setElements(JSON.parse(localStorage.getItem(\"taskAdded\")));\n            }\n        },\n        []\n    )\n\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n        const listCopy = { ...elements };\n\n        const sourceList = listCopy[result.source.droppableId];\n        const [removedElement, newSourceList] = removeFromList(\n            sourceList,\n            result.source.index\n        );\n        listCopy[result.source.droppableId] = newSourceList;\n        const destinationList = listCopy[result.destination.droppableId];\n        listCopy[result.destination.droppableId] = addToList(\n            destinationList,\n            result.destination.index,\n            removedElement,\n            result.destination.droppableId\n        );\n\n        setElements(listCopy);\n    };\n\n    return (\n        <div className=\"board\">\n            <DragDropContext onDragEnd={onDragEnd}>\n                <h2>Kanaban Board</h2>\n                <div className=\"mb-3\">\n\n                    <button className=\"button button-30\" onClick={openModal}>\n                        Add Ticket\n                    </button>\n                </div>\n                <TicketModal modalIsOpen={modalIsOpen} closeModal={closeModal} handleSubmit={addTask} />\n\n                <div className=\"column-grid\">\n                    {lists.map((listKey) => (\n                        <Column\n                            elements={elements[listKey]}\n                            key={listKey}\n                            prefix={`${listKey}`}\n                            setElements={setElements}\n                        />\n                    ))}\n                </div>\n            </DragDropContext>\n\n        </div>\n    );\n}\n\nexport default Board;\n","import React from \"react\";\nimport Board from \"./component/Board.jsx\";\nimport './sass/style.scss'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return <Board />;\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}